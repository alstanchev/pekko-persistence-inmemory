name: Release
run-name: Release version ${{ github.event.inputs.release }}

on:
  workflow_dispatch:
    inputs:
      release:
        description: 'Release version'
        required: true
        type: string

jobs:
  release:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 8
          cache: sbt

      - name: Import GPG key
        run: |
          echo "${{ secrets.PGP_SECRET }}" | gpg --batch --import
        env:
          PGP_SECRET: ${{ secrets.PGP_SECRET }}
          PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}

      - name: Update version.sbt
        run: echo "version := \"${{ github.event.inputs.release }}\"" > version.sbt

      - name: Verify version.sbt content
        run: cat version.sbt

      - name: Create a new branch for release
        run: |
          git checkout -b "release-${{ github.event.inputs.release }}"
          git add -A
          git commit -m "Setting release version ${{ github.event.inputs.release }}"

      - name: Push changes to new branch
        run: |
          git push origin "release-${{ github.event.inputs.release }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "Update version to ${{ github.event.inputs.release }}"
          branch: "release-${{ github.event.inputs.release }}"
          base: master
          title: "Release ${{ github.event.inputs.release }}"
          body: "This PR updates the version to ${{ github.event.inputs.release }}."

  publish:
    needs: release
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 8
          cache: sbt

      - name: Import GPG key
        run: |
          echo "${{ secrets.PGP_SECRET }}" | gpg --batch --import
        env:
          PGP_SECRET: ${{ secrets.PGP_SECRET }}
          PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}

      - name: Publish Signed Artifacts
        run: sbt +publishSigned
        env:
          PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}
          PGP_SECRET: ${{ secrets.PGP_SECRET }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
